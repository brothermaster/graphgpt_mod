{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "nshots",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model-name",
                "/workspace/graphgpt_mod/checkpoints/stage_1",
                "--prompting_file",
                "/workspace/graphgpt_mod/instruct_ds/addtasks/pretrain_car_train.json",
                "--graph_data_path",
                "/workspace/graphgpt_mod/instruct_ds/addtasks/graph.pt",
                "--output_res_path",
                "/workspace/graphgpt_mod/output/addtasks",
                "--num_gpus",
                "1"
            ]
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "task_specific",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                // 语言模型
                "--model_name_or_path",
                "./vicuna-7b-v1.5-16k",
                // 版本
                "--version",
                "v1",
                // 文本数据
                "--data_path",
                "./instruct_ds/addtasks/pretrain_income-car_train.json",
                "--val_data_path",
                "./instruct_ds/addtasks/pretrain_income-car_val.json",
                // 图数据
                "--graph_data_path",
                "./instruct_ds/addtasks/graph.pt",
                // 图编码器
                "--graph_tower",
                "custom_gt",
                // 预训练的
                "--pretrain_graph_mlp_adapter",
                "./checkpoints/stage_1_projector/stage_1_projector.bin",
                // 微调投影层
                "--tune_graph_mlp_adapter",
                "True",
                "--tune_graph_tower",
                "True",
                // 使用 起始和结束图token
                "--use_graph_start_end",
                // 半精度
                "--bf16",
                "True",
                // 模型输出文件夹
                "--output_dir",
                "./checkpoints/stage_2",
                // 训练周期数
                "--num_train_epochs",
                "2",
                // 每个设备样本数
                "--per_device_train_batch_size",
                "2",
                "--per_device_eval_batch_size",
                "2",
                // 梯度累加的步数
                "--gradient_accumulation_steps",
                "1",
                // 评估策略 类似保存策略
                "--evaluation_strategy",
                "steps",
                "--eval_steps",
                "1",
                // 保存策略
                "--save_strategy",
                "steps",
                // 保存步数
                "--save_steps",
                "50000",
                // 限制固定数量的 检测点
                "--save_total_limit",
                "1",
                // 训练结束保存最佳模型
                "--load_best_model_at_end",
                // 评估最佳模型 load_best_model_at_end为True 且不指定指标时 使用loss作为指标
                "--metric_for_best_model",
                "eval_loss",
                // 优化器策略
                "--learning_rate",
                "2e-5",
                "--weight_decay",
                "0.",
                "--warmup_ratio",
                "0.03",
                // 学习策略
                "--lr_scheduler_type",
                "cosine",
                // 记录步数
                "--logging_steps",
                "1",
                "--tf32",
                "False",
                // 最大 tokens 长度
                "--model_max_length",
                "2048",
                "--gradient_checkpointing",
                "True",
                // 加载数据进程数
                "--dataloader_num_workers",
                "4",
                // 数据集类型
                "--lazy_preprocess",
                "True",
                // 实验记录方法
                "--report_to",
                "wandb"
            ]
        },
        {
            "name": "extract_projector",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model_name_or_path",
                "./checkpoints/stage_1",
                "--output",
                "./checkpoints/stage_1_projector/stage_1_projector.bin"
            ]
        },
        {
            "name": "mem",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "--model_name_or_path",
                "./vicuna-7b-v1.5-16k",
                "--version",
                "v1",
                "--data_path",
                "./instruct_ds/addtasks/pretrain_income-car_train.json",
                "--val_data_path",
                "./instruct_ds/addtasks/pretrain_income-car_val.json",
                "--graph_content",
                "./arxiv_ti_ab.json",
                "--graph_data_path",
                "./instruct_ds/addtasks/graph.pt",
                "--graph_tower",
                "custom_gt",
                "--tune_graph_tower",
                "--tune_graph_mlp_adapter",
                "True",
                "--graph_select_layer",
                "-2",
                "--use_graph_start_end",
                "--bf16",
                "True",
                "--fp16",
                "False",
                "--output_dir",
                "./checkpoints/stage_1",
                "--num_train_epochs",
                "3",
                "--per_device_train_batch_size",
                "2",
                "--per_device_eval_batch_size",
                "2",
                "--gradient_accumulation_steps",
                "1",
                "--evaluation_strategy",
                "steps",
                "--eval_steps",
                "1",
                "--save_strategy",
                "steps",
                "--save_steps", //是 eval_steps的整数倍
                "500",
                "--save_total_limit", // 最后与最佳不同时，两个都保留，否则只保留一个
                "2",
                // 训练结束保存最佳模型
                "--load_best_model_at_end",
                // 评估最佳模型 load_best_model_at_end为True 且不指定指标时 使用loss作为指标
                "--metric_for_best_model",
                "eval_loss",
                "--learning_rate",
                "2e-3",
                "--weight_decay",
                "0.",
                "--warmup_ratio",
                "0.03",
                "--lr_scheduler_type",
                "cosine",
                "--logging_steps",
                "1",
                "--tf32",
                "False",
                "--model_max_length",
                "2048",
                "--gradient_checkpointing",
                "True",
                "--lazy_preprocess",
                "True",
                "--report_to",
                "tensorboard",
            ]
        }
    ]
}